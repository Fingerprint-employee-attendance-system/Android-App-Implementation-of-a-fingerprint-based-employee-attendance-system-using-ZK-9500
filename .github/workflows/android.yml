name: Android CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Allows manual triggering

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # ✅ Run Unit Tests
    - name: Run Unit Tests
      run: ./gradlew test

    # ✅ Run Lint Checks (Detects code quality issues)
    - name: Run Lint Checks
      run: ./gradlew lint

    # ✅ Run Code Quality Analysis (Detects bad code)
    - name: Run Code Quality Analysis
      run: ./gradlew check

    # ✅ Build Release APK
    - name: Build Release APK
      run: ./gradlew assembleRelease

    # ✅ Sign APK (Ensure secrets are set)
    - name: Sign APK
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
      run: |
        echo "$KEYSTORE_FILE" | base64 --decode > keystore.jks
        jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore keystore.jks -storepass "$KEYSTORE_PASSWORD" -keypass "$KEY_PASSWORD" app/build/outputs/apk/release/app-release-unsigned.apk "$KEY_ALIAS"
        mv app/build/outputs/apk/release/app-release-unsigned.apk app-release.apk

    # ✅ Upload the signed APK as an artifact
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: app-release.apk
        path: app-release.apk

    # ✅ Create a GitHub Release with the APK
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: app-release.apk
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
